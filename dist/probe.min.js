/*!
 * Titon Probe v0.4.2
 * Copyright 2010-2013, The Titon Project - http://titon.io
 * BSD-2 - https://github.com/titon/probe/blob/master/license.md
 */
(function(root){"use strict";var vendor,slice=Array.prototype.slice,isNode=typeof module!=="undefined"&&module.exports,methodPrefix="_";function mapPrototypes(vendor,protos,funcs){var p,f,proto,func;for(p=0;proto=protos[p];p++){for(f=0;func=funcs[f];f++){if(!vendor[func]||proto[methodPrefix+func]||proto.prototype[methodPrefix+func]){continue}if(proto===Object){proto[methodPrefix+func]=vendor[func]}else{extendPrototype.call(this,vendor,proto,func)}}}}function extendPrototype(vendor,proto,func){proto.prototype[methodPrefix+func]=function(){var args=slice.call(arguments)||[];args.unshift(this);return vendor[func].apply(this,args)}}function moduleExists(name){try{return require.resolve(name)}catch(e){return false}}if(isNode){exports.mapPrototypes=mapPrototypes;exports.extendPrototype=extendPrototype;exports.methodPrefix=methodPrefix}else{root.Probe={mapPrototypes:mapPrototypes,extendPrototype:extendPrototype,methodPrefix:methodPrefix}}if(isNode){if(moduleExists("lodash")){exports._=root._=require("lodash")}else if(moduleExists("underscore")){exports._=root._=require("underscore")}}var stringFunctions=["escape","unescape","template","uniqueId","isBlank","stripTags","capitalize","chop","clean","count","chars","swapCase","escapeHTML","unescapeHTML","escapeRegExp","splice","insert","include","join","lines","reverse","startsWith","endsWith","succ","titleize","camelize","underscored","dasherize","classify","humanize","trim","ltrim","rtrim","truncate","prune","words","pad","lpad","rpad","lrpad","sprintf","vsprintf","toNumber","strRight","strRightBack","strLeft","strLeftBack","slugify","surround","quote","unquote","repeat","naturalCmp","levenshtein","toBoolean"];if(typeof root._!=="undefined"){vendor=root._;mapPrototypes(vendor,[Array],["compact","difference","drop","findIndex","findLastIndex","first","flatten","head","indexOf","initial","intersection","last","lastIndexOf","pull","range","remove","rest","sortedIndex","tail","take","union","uniq","unique","unzip","without","xor","zip","zipObject"]);mapPrototypes(vendor,[Array,Object,String],["all","any","at","collect","contains","countBy","detect","each","eachRight","every","filter","find","findLast","findWhere","foldl","foldr","forEach","forEachRight","groupBy","include","indexBy","inject","invoke","map","max","min","pluck","reduce","reduceRight","reject","sample","select","shuffle","size","some","sortBy","toArray","where","constant"]);mapPrototypes(vendor,[Function],["bind","compose","curry","debounce","defer","delay","memoize","once","partial","partialRight","throttle","createCallback"]);mapPrototypes(vendor,[Object],["assign","clone","cloneDeep","defaults","extend","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","has","invert","keys","mapValues","merge","methods","mixin","omit","pairs","pick","property","result","transform","values"]);mapPrototypes(vendor,[String],stringFunctions);mapPrototypes(vendor,[Number],["times","parseInt"]);mapPrototypes(vendor,[Array,Object,String,Number],["isEmpty","isEqual","isUndefined","isNull","toString","valueOf"])}if(isNode&&moduleExists("underscore.string")){exports._s=root._s=require("underscore.string")}if(typeof root._!=="undefined"&&typeof root._.str!=="undefined"){root._s=root._.str}if(typeof root._s!=="undefined"){vendor=root._s;mapPrototypes(vendor,[String],stringFunctions);mapPrototypes(vendor,[Number],["numberFormat"])}})(this);